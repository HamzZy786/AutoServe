# Default values for autoserve.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

# Frontend configuration
frontend:
  replicaCount: 2
  image:
    repository: autoserve/frontend
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Backend configuration
backend:
  replicaCount: 2
  image:
    repository: autoserve/backend
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8000
    metricsPort: 8001
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  env:
    DATABASE_URL: "postgresql://postgres:password@postgres:5432/autoserve"
    REDIS_URL: "redis://redis:6379/0"
    SECRET_KEY: "your-secret-key-here"

# Worker configuration
worker:
  replicaCount: 2
  image:
    repository: autoserve/worker
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8002
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 15
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 85

# ML Controller configuration
mlController:
  replicaCount: 1
  image:
    repository: autoserve/ml-controller
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8003
    metricsPort: 8004
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Database configuration
postgres:
  enabled: true
  image:
    repository: postgres
    tag: "15"
  service:
    port: 5432
  env:
    POSTGRES_DB: "autoserve"
    POSTGRES_USER: "postgres"
    POSTGRES_PASSWORD: "password"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  persistence:
    enabled: true
    size: 8Gi

# Redis configuration
redis:
  enabled: true
  image:
    repository: redis
    tag: "7-alpine"
  service:
    port: 6379
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: autoserve.local
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
        - path: /ml
          pathType: Prefix
          service: mlController
  tls: []

# Monitoring configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
  jaeger:
    enabled: true

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network Policy
networkPolicy:
  enabled: true

nodeSelector: {}

tolerations: []

affinity: {}
